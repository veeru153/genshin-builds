{"version":3,"sources":["components/Create/Create.module.css","components/Artifact/Artifact.module.css","components/Character/Character.module.css","components/Bonus/Bonus.module.css","components/Error/Error.module.css","components/Build/Build.module.css","components/UI/Radio/Radio.module.css","components/store/validationData.js","components/util/getArtifactsFromParams.js","components/util/getCharacterFromParams.js","components/util/parseStats.js","components/util/getSetBonusList.js","components/Artifact/Artifact.js","components/Character/Character.js","components/Bonus/Bonus.js","components/Error/Error.js","components/Build/Build.js","components/Create/ArtifactSelection.js","components/UI/Radio/Radio.js","components/Create/Create.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","characters","elements","setAbbreviations","statAbbreviations","isInvalid","a","set","undefined","includes","isNaN","level","stars","main","sub","forEach","stat","initArtifact","getArtifactsFromParams","params","artifacts","flower","plume","sands","goblet","circlet","slice","i","length","split","type","data","trim","parseInt","map","x","console","log","Error","Promise","resolve","reject","getCharacterFromParams","c","character","name","ascension","element","statPairs","hp","atk","def","em","er","edb","pdb","critr","critd","hb","parseStat","pair","classes","val","endsWith","replace","className","setCount","getSetBonusList","pieces","Object","values","p","hasOwnProperty","bonusArr","count","startsWith","push","setName","setInfo","bonus","setBonus1","img","setBonus2","setBonus4","getBgColor","Artifact","list","feather","clock","info","style","backgroundColor","imgContainer","src","alt","noStats","stats","statGroup","statRow","Character","el","hex","meta","weaponTypes","weapon","Bonus","state","bonusList","this","props","setState","heading","bonusRow","Component","msg","err","message","to","navBtn","Build","loaded","error","errorMsg","s","window","location","hash","substring","ArtifactSelection","title","aType","tag","fprops","_","subStatPairs","statPair","dropdown","onChange","e","handleArtifactSubStat","target","value","keys","TextInput","artifactData","artifactTitle","artifactInfo","handleArtifactSelection","artifactMeta","handleArtifactMeta","handleArtifactMainStat","addSubStatBtn","onClick","addSubStat","Radio","id","selection","clicked","checked","htmlFor","Create","handleCharacterSelection","newVal","characterTemp","setFieldValue","artifactTemp","isKey","idx","preventDefault","encodeArtifactData","arr","statKey","statVal","join","defaultChar","defaultEl","subHeading","initialValues","onSubmit","buildUrl","open","process","form","handleSubmit","characterSection","characterSectionBtns","charAttribs","display","artifactSection","submitBtn","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cea9822b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Create\":\"Create_Create__lcApo\",\"heading\":\"Create_heading__1n31F\",\"subHeading\":\"Create_subHeading__SVmYa\",\"form\":\"Create_form__2hmDS\",\"dropdown\":\"Create_dropdown__1dCZ9\",\"characterSection\":\"Create_characterSection__2Nuu5\",\"characterSectionBtns\":\"Create_characterSectionBtns__jr0wD\",\"imgContainer\":\"Create_imgContainer__3FFLu\",\"charAttribs\":\"Create_charAttribs__3Amxy\",\"TextInput\":\"Create_TextInput__3hnH8\",\"artifactSection\":\"Create_artifactSection__LK1t5\",\"artifactData\":\"Create_artifactData__2MU3w\",\"artifactInfo\":\"Create_artifactInfo__MDHE7\",\"artifactTitle\":\"Create_artifactTitle__N8KPS\",\"artifactMeta\":\"Create_artifactMeta__3pNiX\",\"stats\":\"Create_stats__3mx9-\",\"statPair\":\"Create_statPair__36yVc\",\"addSubStatBtn\":\"Create_addSubStatBtn__2SXCi\",\"submitBtn\":\"Create_submitBtn__1aFQn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Artifact\":\"Artifact_Artifact__17WUJ\",\"info\":\"Artifact_info__1DRGK\",\"imgContainer\":\"Artifact_imgContainer__2lanu\",\"name\":\"Artifact_name__2eamK\",\"stats\":\"Artifact_stats__1JUrX\",\"statGroup\":\"Artifact_statGroup__29ThR\",\"statRow\":\"Artifact_statRow__3IBmT\",\"noStats\":\"Artifact_noStats__1QNEO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Character\":\"Character_Character__2iopZ\",\"imgContainer\":\"Character_imgContainer__1Lak3\",\"info\":\"Character_info__fHDVM\",\"meta\":\"Character_meta__3xSWF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Bonus\":\"Bonus_Bonus__19LT6\",\"heading\":\"Bonus_heading__3YTO8\",\"bonusList\":\"Bonus_bonusList__2V_Xx\",\"bonusRow\":\"Bonus_bonusRow__1vAve\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Error\":\"Error_Error__3f4kP\",\"heading\":\"Error_heading__3Kbue\",\"msg\":\"Error_msg__DS6VH\",\"navBtn\":\"Error_navBtn__31u1q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Build\":\"Build_Build__2IE2v\",\"artifacts\":\"Build_artifacts__SmA2T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Radio\":\"Radio_Radio__36M14\"};","export const characters = [\n    'Albedo',  'Amber',     'Barbara',   'Beidou',\n    'Bennett', 'Chongyun',  'Diluc',\n    'Diona',   'Fischl',    'Ganyu',     'Jean',\n    'Kaeya',   'Keqing',    'Klee',\n    'Lisa',    'Mona',      'Ningguang',\n    'Noelle',  'Qiqi',      'Razor',\n    'Sucrose', 'Tartaglia', 'Traveler',\n    'Venti',   'Xiangling', 'Xingqiu',\n    'Xinyan',  'Zhongli'\n];\n\nexport const elements = ['Pyro', 'Hydro', 'Electro', 'Dendro', 'Cryo', 'Geo', 'Anemo'];\n\nexport const setAbbreviations = [\n    \"none\",\n    \"sch\", \"lyd\", \"cwf\", \"dew\", \"exl\", \n    \"viv\", \"wat\", \"glf\", \"ros\", \"mab\", \n    \"blc\", \"nob\", \"gam\", \"brh\", \"trd\", \n    \"adv\", \"mar\", \"reb\", \"lav\", \"ber\",\n    \"ths\", \"thf\", \"arp\", \"ins\", \"tim\",\n    \"icb\", \"oce\",\n    \"one_pwis\", \"one_pspt\", \"one_pill\", \"one_pdes\",     // One Piece Sets\n]\n\nexport const statAbbreviations = [\n    \"hp\", \"atk\", \"def\", \n    \"em\", \"er\", \"edb\", \"pdb\", \n    \"critr\", \"critd\", \"hb\",\n]\n","import { setAbbreviations, statAbbreviations } from '../store/validationData';\n\nconst isInvalid = (a) => {\n    if(a.set === null || a.set === undefined || !setAbbreviations.includes(a.set)) return true;\n    if(isNaN(a.level) || isNaN(a.stars)) return true;\n    if(!statAbbreviations.includes(a.main[0])) return true;\n\n    a.sub.forEach(stat => {\n        if(!statAbbreviations.includes(stat[0])) return true;\n    })\n\n    return false;\n}\n\nconst initArtifact = {\n    set: \"none\",\n    level: 0,\n    stars: 0,\n    main: [\"\",\"\"],\n    sub: [[\"\",\"\"]],\n}\n\nconst getArtifactsFromParams = (params) => {\n    const artifacts = {\n        flower: initArtifact,\n        plume: initArtifact,\n        sands: initArtifact,\n        goblet: initArtifact,\n        circlet: initArtifact,\n    };\n\n    params = params.slice(1);\n    \n    for(let i=0; i<params.length; i++) {\n        const a = params[i].split(\"=\");\n        const type = a[0];\n        const data = a[1].split(\",\");\n\n        artifacts[type] = {\n            set: data[0].trim(),\n            stars: parseInt(data[1]),\n            level: parseInt(data[2]),\n            main: data[3].split(\"+\"),\n            sub: data.slice(4).map(x => x.split(\"+\"))\n        }\n\n        console.log(a);\n\n        if(isInvalid(artifacts[type])) {\n            throw new Error(`Incomplete or Invalid Artifact (${type}) Data.\\nCheck the URL and try again or create your own build.`)\n        }\n    }\n\n    return new Promise((resolve, reject) => {\n        resolve(artifacts);\n    })\n    \n}\n\nexport default getArtifactsFromParams;","import { characters, elements } from '../store/validationData';\n\nconst isInvalid = (c) => {\n    if(c.name.length === 0 || !characters.includes(c.name)) return true;\n    if(isNaN(c.ascension) || isNaN(c.level)) return true;\n\n    if(c.name === \"Traveler\" && \n        (c.element === null || \n            c.element === undefined || \n            c.element.length === 0)\n    ) return true;\n\n    if(c.name === \"Traveler\" && !elements.includes(c.element)) return true;\n\n    return false;\n}\n\nconst getCharacterFromParams = (params) => {\n    const data = params[0].split(\"=\")[1].split(\",\");\n\n    const character = {\n        name: data[0].trim(),\n        ascension: parseInt(data[1]),\n        level: parseInt(data[2]),\n    }\n\n    if(character.name == \"Traveler\") {\n        character.element = data[3].trim();\n    }\n\n    if(isInvalid(character)) {\n        throw new Error(\"Incomplete or Invalid Character Information.\\nCheck the URL and try again or create your own build.\")\n    }\n\n    return new Promise((resolve, reject) => {\n        resolve(character);\n    })\n}\n\nexport default getCharacterFromParams;","const statPairs = {\n    hp: \"HP\",\n    atk: \"ATK\",\n    def: \"DEF\",\n    em: \"Elemental Mastery\",\n    er: \"Elemental Recharge\",\n    edb: \"Elemental DMG Bonus\",\n    pdb: \"Physical DMG Bonus\",\n    critr: \"CRIT Rate\",\n    critd: \"CRIT DMG\",\n    hb: \"Healing Bonus\",\n}\n\nconst parseStat = (pair, classes) => {\n    let name = statPairs[pair[0]];\n    let val = pair[1];\n\n    if (val.endsWith('p')) {\n        val = val.replace('p', '%');\n    }\n\n    return (\n        <div key={name} className={classes}>\n            <div>{name}</div>\n            <div>+{val}</div>\n        </div>\n    )\n}\n\nexport default parseStat;","import { setInfo } from '../store';\n\nlet setCount = { }\n\nconst getSetBonusList = (artifacts) => {\n    let pieces = Object.values(artifacts);\n\n    for(let i=0; i<pieces.length; i++) {\n        let p = pieces[i].set;\n\n        if(p === \"none\") continue;\n        if(setCount.hasOwnProperty(p)) {\n            setCount[p] = setCount[p] + 1;\n        } else {\n            setCount[p] = 1;\n        }\n    }\n\n    let bonusArr = [];\n\n    console.log(setCount)\n\n    for(let set in setCount) {\n        let count = setCount[set];\n\n        if(set.startsWith(\"one_\")) {\n            bonusArr.push({\n                setName: setInfo[set].name,\n                type: \"1-Piece Set\",\n                bonus: setInfo[set].setBonus1,\n                img: setInfo[set].img,\n            })\n        } else if(count >= 4) {\n            bonusArr.push({\n                setName: setInfo[set].name,\n                type: \"2-Piece Set\",\n                bonus: setInfo[set].setBonus2,\n                img: setInfo[set].img,\n            })\n            bonusArr.push({\n                setName: setInfo[set].name,\n                type: \"4-Piece Set\",\n                bonus: setInfo[set].setBonus4,\n                img: setInfo[set].img,\n            })\n        } else if(count >= 2) {\n            bonusArr.push({\n                setName: setInfo[set].name,\n                type: \"2-Piece Set\",\n                bonus: setInfo[set].setBonus2,\n                img: setInfo[set].img,\n            })\n        } else continue;\n    }\n\n    return new Promise((resolve, reject) => {\n        resolve(bonusArr);\n    })\n    \n}\n\nexport default getSetBonusList;","import React from 'react';\nimport classes from './Artifact.module.css';\n\nimport { flower, feather, clock, goblet, circlet } from '../store/artifacts';\nimport { stars } from '../store';\nimport { parseStat } from '../util';\n\nconst Artifact = ({ data, type }) => {\n    let list = {};\n    switch (type) {\n        case \"flower\":\n            list = flower;\n            break;\n        case \"plume\":\n            list = feather;\n            break;\n        case \"sands\":\n            list = clock;\n            break;\n        case \"goblet\":\n            list = goblet;\n            break;\n        case \"circlet\":\n            list = circlet;\n            break;\n        default:\n            break;\n    }\n\n    return (\n        <div className={classes.Artifact}>\n            <div\n                className={classes.info}\n                style={{ backgroundColor: getBgColor(data.stars) }}\n            >\n                <div className={classes.imgContainer}>\n                    <img src={list[data.set].img} alt={list[data.set].name}></img>\n                </div>\n                <div className={classes.name}>{list[data.set].name}</div>\n            </div>\n            {data.set === \"none\" ?\n                <div className={classes.noStats}>\n                    No Artifact of this Category was added to the Build\n                </div> :\n                <div className={classes.stats}>\n                    <div className={classes.statGroup}>\n                        <div>Meta</div>\n                        <div className={classes.statRow}>\n                            <div>\n                                <img src={stars[data.stars]} alt={data.stars}></img>\n                            </div>\n                            <div>{`Level: ${data.level}`}</div>\n                        </div>\n                    </div>\n\n                    <div className={classes.statGroup}>\n                        <div>Main Stats</div>\n                        {parseStat(data.main, classes.statRow)}\n                    </div>\n\n                    <div className={classes.statGroup}>\n                        <div>Sub Stats</div>\n                        {data.sub.map(pair => parseStat(pair, classes.statRow))}\n                    </div>\n                </div>\n            }\n        </div>\n    )\n}\n\nconst getBgColor = (stars) => {\n    switch (stars) {\n        case 3: return \"#576c90\";\n        case 4: return \"#685f94\";\n        case 5: return \"#9b6f3c\";\n    }\n}\n\nexport default Artifact;","import React from 'react';\nimport classes from './Character.module.css';\n\nimport { characters, elements, weaponTypes } from '../store';\n\nconst Character = ({ data }) => {\n    let el = data.name == \"Traveler\" ? data.element : characters[data.name].element;\n    console.log(elements[el]);\n    return (\n        <div className={classes.Character}>\n            <div className={classes.imgContainer}>\n                <img \n                    src={characters[data.name].img} \n                    alt={data.name}\n                    style={{ backgroundColor: elements[el].hex }}\n                ></img>\n            </div>\n            <div className={classes.info}>\n                <div className={classes.meta}>\n                    <div>{data.name}</div>\n                    <img src={elements[el].img} alt={el} ></img>\n                    <img src={weaponTypes[characters[data.name].weapon]} alt={characters[data.name].weapon}></img>\n                </div>\n                <div>Ascension Level {data.ascension}</div>\n                <div>Level {data.level}</div>\n            </div>\n        </div>\n    )\n}\n\nexport default Character;","import React, { Component } from 'react';\nimport classes from './Bonus.module.css';\n\nimport { getSetBonusList } from '../util';\n\nclass Bonus extends Component {\n\n    state = {\n        bonusList: []\n    }\n\n    async componentDidMount() {\n        const bonusList = await getSetBonusList(this.props.artifacts);\n        console.log(bonusList);\n        this.setState({\n            bonusList: bonusList\n        })\n    }\n\n    render() {\n        return (\n            <div className={classes.Bonus}>\n                {this.state.bonusList.length === 0 ?\n                    null :\n                    <>\n                        <div className={classes.heading}>Set Bonuses</div>\n                        <div className={classes.bonusList}>\n                            {this.state.bonusList.map(bonus => {\n                                return (\n                                    <div className={classes.bonusRow}>\n                                        <div>{bonus.setName}</div>\n                                        <div>{bonus.type}</div>\n                                        <div>{bonus.bonus}</div>\n                                    </div>\n                                )\n                            })}\n                        </div>\n                    </>\n                }\n            </div>\n        )\n    }\n}\n\nexport default Bonus","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport classes from './Error.module.css';\n\nconst Error = (props) => {\n    console.log(props)\n    return (\n        <div className={classes.Error}>\n            <div className={classes.heading}>Genshin Builds: Error</div>\n            <div className={classes.msg}>{props.err.message}</div>\n            <Link to=\"/\" className={classes.navBtn}>\n                <button>Create a Build</button>\n            </Link>\n        </div>\n    )\n}\n\nexport default Error;","import React, { Component } from 'react';\nimport Artifact from '../Artifact/Artifact';\nimport Character from '../Character/Character';\nimport classes from './Build.module.css';\n\nimport { getArtifactsFromParams, getCharacterFromParams } from '../util';\nimport { characters } from '../store';\n\nimport Bonus from '../Bonus/Bonus';\nimport Error from '../Error/Error';\n\nclass Build extends Component {\n\n    state = {\n        loaded: false,\n        error: false,\n        errorMsg: \"\",\n        character: { },\n        artifacts: { },\n    }\n\n    async componentDidMount() {\n        const s = window.location.hash.substring(9);\n\n        if(s.length === 0) {\n            this.setState({ \n                error: true,\n                errorMsg: \"Invalid URL. Check that the URL is correct and try again.\"\n            });\n        } else {\n            const params = s.split(\"&\");\n\n            let character, artifacts;\n    \n            try {\n                character = await getCharacterFromParams(params);\n                artifacts = await getArtifactsFromParams(params);\n\n                this.setState({\n                    character: character,\n                    artifacts: artifacts,\n                    loaded: true,\n                })\n            } catch (e) {\n                this.setState({\n                    error: true,\n                    errorMsg: e\n                })\n            }\n        }\n    }\n\n    render() {\n        const { flower, plume, sands, goblet, circlet } = this.state.artifacts;\n        const el = this.state.character.name == \"Traveler\" \n                    ? this.state.character?.element \n                    : characters[this.state.character.name]?.element;\n        return (\n            <>\n            {this.state.error ?\n                <Error err={this.state.errorMsg} /> :\n            this.state.loaded ? \n                <div className={classes.Build}>\n                    <Character data={this.state.character}/>\n                    <div className={classes.artifacts}>\n                        <Artifact type=\"flower\" data={flower} />\n                        <Artifact type=\"plume\" data={plume} />\n                        <Artifact type=\"sands\" data={sands} />\n                        <Artifact type=\"goblet\" data={goblet} />\n                        <Artifact type=\"circlet\" data={circlet} />\n                    </div>\n                    <Bonus artifacts={this.state.artifacts} />\n                </div> :\n                <p>Loading...</p>\n            }\n            </>\n        );\n    }\n}\n\nexport default Build;","import React from 'react';\nimport classes from './Create.module.css';\nimport { statPairs } from '../store';\n\nconst ArtifactSelection = ({ title, aType, tag, fprops, _ }) => {\n\n    let subStatPairs = [];\n    for (let i = 5; i < fprops.values[tag].length; i += 2) {\n        subStatPairs.push(\n            <div className={classes.statPair}>\n                <div>\n                    <select\n                        className={classes.dropdown}\n                        onChange={(e) => _.handleArtifactSubStat(tag, i, true, e.target.value, fprops)}\n                    >\n                        {Object.keys(statPairs).map(s => (\n                            <option value={s}>{statPairs[s]}</option>\n                        ))}\n                    </select>\n                </div>\n                <div>\n                    <input\n                        type=\"text\"\n                        className={classes.TextInput}\n                        value={fprops.values[tag][i + 1]}\n                        onChange={(e) => _.handleArtifactSubStat(tag, i + 1, false, e.target.value, fprops)}\n                    ></input>\n                </div>\n            </div>\n        )\n    }\n\n\n    return (\n        <div className={classes.artifactData}>\n            <div className={classes.artifactTitle}>{title}</div>\n            <div className={classes.artifactInfo}>\n                <div className={classes.imgContainer}>\n                    <img src={aType[fprops.values[tag][0]].img}></img>\n                </div>\n                <div>\n                    <select\n                        className={classes.dropdown}\n                        onChange={(e) => _.handleArtifactSelection(tag, e.target.value, fprops)}\n                    >\n                        {Object.keys(aType).map(a => (\n                            <option value={a}>{aType[a].name}</option>\n                        ))}\n                    </select>\n                </div>\n            </div>\n            <div className={classes.artifactMeta}>\n                <div>\n                    <div>Stars</div>\n                    <input\n                        type=\"text\"\n                        className={classes.TextInput}\n                        value={fprops.values[tag][1]}\n                        onChange={(e) => _.handleArtifactMeta(tag, \"stars\", e.target.value, fprops)}\n                    ></input>\n                </div>\n                <div>\n                    <div>Level</div>\n                    <input\n                        type=\"text\"\n                        className={classes.TextInput}\n                        value={fprops.values[tag][2]}\n                        onChange={(e) => _.handleArtifactMeta(tag, \"level\", e.target.value, fprops)}\n                    ></input>\n                </div>\n            </div>\n\n            <section className={classes.stats}>\n                <p>Main Stat</p>\n                <div className={classes.statPair}>\n                    <div>\n                        <select\n                            className={classes.dropdown}\n                            onChange={(e) => _.handleArtifactMainStat(tag, true, e.target.value, fprops)}\n                        >\n                            {Object.keys(statPairs).map(s => (\n                                <option value={s}>{statPairs[s]}</option>\n                            ))}\n                        </select>\n                    </div>\n                    <div>\n                        <input\n                            type=\"text\"\n                            className={classes.TextInput}\n                            value={fprops.values[tag][4]}\n                            onChange={(e) => _.handleArtifactMainStat(tag, false, e.target.value, fprops)}\n                        ></input>\n                    </div>\n                </div>\n            </section>\n\n            <section className={classes.stats}>\n                <p>Sub Stats</p>\n                {subStatPairs.map(p => p)}\n            </section>\n\n            <div>\n                <button className={classes.addSubStatBtn} onClick={(e) => _.addSubStat(e, tag, fprops)}>\n                    + Add Sub Stat\n                </button>\n            </div>\n\n        </div>\n    )\n}\n\nexport default ArtifactSelection;","import React from 'react';\n\nimport classes from './Radio.module.css';\n\nconst Radio = ({ id, name, value, selection, clicked }) => {\n    return (\n        <div className={classes.Radio}>\n            <input \n                type=\"radio\" \n                id={id} \n                name=\"character\" \n                value={value} \n                checked={selection}\n                onClick={clicked}\n                onChange={() => console.log(value)}\n            ></input>\n            <label htmlFor={value}>{value}</label>\n        </div>\n    )\n}\n\nexport default Radio;","import React, { Component } from 'react';\nimport classes from './Create.module.css';\n\nimport { Formik } from 'formik';\nimport ArtifactSelection from './ArtifactSelection';\nimport { characters, elements } from '../store';\nimport { flower, feather, clock, goblet, circlet } from '../store/artifacts';\nimport Radio from '../UI/Radio/Radio';\n\n// http://localhost:3000/genshin-builds/#/build?character=Fischl,2,31&flower=adv,3,12,em+69,atk+4.20p,critr+3.6p&plume=cwf,3,12,hp+69,atk+4.20p,critr+3.6p&sands=wat,4,12,hp+69,atk+4.20p,critr+3.6p&goblet=adv,4,12,hp+69,atk+4.20p,critr+3.6p&circlet=sch,12,5,hp+69,atk+4.20p,critr+3.6p#/\n\nclass Create extends Component {\n\n    handleCharacterSelection = (type, newVal, props) => {\n        let characterTemp = props.values.character;\n        switch (type) {\n            case \"character\":\n                characterTemp[0] = newVal;\n                characterTemp[3] = characterTemp[0] === \"Traveler\" ? \"Anemo\" : characters[newVal].element;\n                break;\n            case \"ascension\":\n                characterTemp[1] = newVal;\n                break;\n            case \"level\":\n                characterTemp[2] = newVal;\n                break;\n            case \"element\":\n                if (characterTemp[0] === \"Traveler\") {\n                    characterTemp[3] = newVal;\n                }\n                break;\n            default:\n                break;\n        }\n        props.setFieldValue(\"character\", characterTemp);\n    }\n\n    handleArtifactSelection = (type, newVal, props) => {\n        const artifactTemp = props.values[type];\n        artifactTemp[0] = newVal;\n        props.setFieldValue(type, artifactTemp);\n    }\n\n    handleArtifactMeta = (a, type, newVal, props) => {\n        const artifactTemp = props.values[a];\n        switch (type) {\n            case \"stars\":\n                artifactTemp[1] = newVal;\n                break;\n            case \"level\":\n                artifactTemp[2] = newVal;\n                break;\n            default:\n                break;\n        }\n        props.setFieldValue(a, artifactTemp);\n    }\n\n    handleArtifactMainStat = (a, isKey, val, props) => {\n        const artifactTemp = props.values[a];\n\n        if (isKey) artifactTemp[3] = val;\n        else artifactTemp[4] = `${val}`;\n\n        props.setFieldValue(a, artifactTemp);\n    }\n\n    handleArtifactSubStat = (a, idx, isKey, val, props) => {\n        const artifactTemp = props.values[a];\n\n        if (isKey) artifactTemp[idx] = val;\n        else artifactTemp[idx] = `${val}`;\n\n        props.setFieldValue(a, artifactTemp);\n    }\n\n    addSubStat = (e, a, props) => {\n        e.preventDefault();\n        const artifactTemp = props.values[a];\n        artifactTemp.push(\"hp\");\n        artifactTemp.push(\"\");\n        props.setFieldValue(a, artifactTemp);\n    }\n\n    encodeArtifactData = (artifactData) => {\n        let arr = artifactData.slice(0, 3);\n\n        for(let i=3; i<artifactData.length-1; i+=2) {\n            let statKey = artifactData[i];\n            let statVal = artifactData[i+1];\n            if(statVal.endsWith(\"%\")) statVal = statVal.substring(0, statVal.length-1) + \"p\";\n\n            arr.push(`${statKey}+${statVal}`);\n        }\n\n        return arr.join(\",\");\n    }\n\n    render() {\n        const defaultChar = Object.keys(characters)[0];\n        const defaultEl = characters[defaultChar].element\n        return (\n            <div className={classes.Create}>\n                <div className={classes.heading}>Genshin Builds</div>\n                <div className={classes.subHeading}>Create and Share your own Genshin Impact builds</div>\n                <Formik\n                    initialValues={{\n                        // character: [\"Amber\", \"1\", \"1\", \"Pyro\"],\n                        character: [defaultChar, \"1\", \"1\", defaultEl],\n                        flower: [\"none\", \"3\", \"0\", \"hp\", \"\"],\n                        plume: [\"none\", \"3\", \"0\", \"hp\", \"\"],\n                        sands: [\"none\", \"3\", \"0\", \"hp\", \"\"],\n                        goblet: [\"none\", \"3\", \"0\", \"hp\", \"\"],\n                        circlet: [\"none\", \"3\", \"0\", \"hp\", \"\"]\n                    }}\n                    onSubmit={(values) => {\n                        let { character, flower, plume, sands, goblet, circlet } = values;\n\n                        let buildUrl = `build?character=${character.join(\",\")}&flower=${this.encodeArtifactData(flower)}&plume=${this.encodeArtifactData(plume)}&sands=${this.encodeArtifactData(sands)}&goblet=${this.encodeArtifactData(goblet)}&circlet=${this.encodeArtifactData(circlet)}`;\n\n                        window.open(`${process.env.PUBLIC_URL}/#/${buildUrl}`);\n                        \n                    }}\n                >\n                    {(props) => (\n                        <form className={classes.form} onSubmit={props.handleSubmit}>\n                            <div className={classes.characterSection}>\n                                <section className={classes.characterSectionBtns}>\n                                    {Object.keys(characters).map(c => (\n                                        <Radio\n                                            key={c}\n                                            id={c}\n                                            value={c}\n                                            selection={c === props.values.character[0]}\n                                            clicked={() => this.handleCharacterSelection(\"character\", c, props)}\n                                        />\n                                    ))}\n                                </section>\n                                <div className={classes.imgContainer}>\n                                    <img\n                                        src={characters[props.values.character[0]].img}\n                                        alt={props.values.character[0]}\n                                        style={{ backgroundColor: elements[props.values.character[3]].hex }}\n                                    />\n                                </div>\n                            </div>\n                            <div className={classes.charAttribs}>\n                                <div>\n                                    <div>Ascension:</div>\n                                    <input\n                                        type=\"text\"\n                                        className={classes.TextInput}\n                                        value={props.values.character[1]}\n                                        onChange={(e) => this.handleCharacterSelection(\"ascension\", e.target.value, props)}\n                                    ></input>\n                                </div>\n                                <div>\n                                    <div>Level:</div>\n                                    <input\n                                        type=\"text\"\n                                        className={classes.TextInput}\n                                        value={props.values.character[2]}\n                                        onChange={(e) => this.handleCharacterSelection(\"level\", e.target.value, props)}\n                                    ></input>\n                                </div>\n                                <div style={{ display: props.values.character[0] === \"Traveler\" ? \"flex\" : \"none\" }}>\n                                    <div>Element:</div>\n                                    <select\n                                        className={classes.dropdown}\n                                        onChange={(e) => this.handleCharacterSelection(\"element\", e.target.value, props)}\n                                    >\n                                        {Object.keys(elements).map(el => {\n                                            if (el === \"Adaptive\") { }\n                                            else {\n                                                return (\n                                                    <option key={el} value={el}>{el}</option>\n                                                )\n                                            }\n                                        })}\n                                    </select>\n                                </div>\n                            </div>\n                            <div className={classes.artifactSection}>\n                                <ArtifactSelection\n                                    title=\"Flower of Life\"\n                                    aType={flower}\n                                    tag=\"flower\"\n                                    fprops={props}\n                                    _={this}\n                                />\n                                <ArtifactSelection\n                                    title=\"Plume of Death\"\n                                    aType={feather}\n                                    tag=\"plume\"\n                                    fprops={props}\n                                    _={this}\n                                />\n                                <ArtifactSelection\n                                    title=\"Sands of Eon\"\n                                    aType={clock}\n                                    tag=\"sands\"\n                                    fprops={props}\n                                    _={this}\n                                />\n                                <ArtifactSelection\n                                    title=\"Goblet of Eonothem\"\n                                    aType={goblet}\n                                    tag=\"goblet\"\n                                    fprops={props}\n                                    _={this}\n                                />\n                                <ArtifactSelection\n                                    title=\"Circlet of Logos\"\n                                    aType={circlet}\n                                    tag=\"circlet\"\n                                    fprops={props}\n                                    _={this}\n                                />\n                            </div>\n                            <button type=\"submit\" className={classes.submitBtn}>Generate Build</button>\n                        </form>\n                    )}\n                </Formik>\n            </div>\n        )\n    }\n}\n\nexport default Create;","import './App.css';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nimport Build from './components/Build/Build';\nimport Create from './components/Create/Create';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/build\" component={Build} />\n          <Route exact path=\"/\" component={Create} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}